!function(a){"use strict";function b(a,b){for(var c=b.split(".");c.length;)a=a[c.shift()];return a}var c={},d=c.toString;"Boolean Number String Function Array Date RegExp Object Error".split(" ").forEach(function(a){c["[object "+a+"]"]=a.toLowerCase()});var e=function(a){return null===a?a+"":"object"==typeof a||"function"==typeof a?c[d.call(a)]||"object":typeof a},f=function(a){var b=a.comparator;if(!a.comparator)throw new Error("Insufficient data for sorting, require comparison function");if("string"===e(b)){if(!g.comparators[b])throw new Error("Unknown comparator: "+b);b=g.comparators[b]}if("function"!==e(b))throw new Error("Comparator is not a function: "+b);return b},g=function(a){if("array"!==e(a)&&(a=[a]),0===arguments.length||0===a.length)throw new Error("Config not supplied");a.forEach(function(a){if(!a.property)throw new Error("Insufficient data for sorting, require property");a.comparator=f(a)});var c=function(d){var e=a[d],f=this,g=e.comparator,h=e.property,i=e.reverse?-1:1;return function(e,j){var k=g.call(f,b(e,h),b(j,h))*i;return 0===k&&a[d+1]&&(k=c.call(this,d+1)(e,j)),k}};return this.sort(c.call(this,0))};g.comparators={text:function(a,b){return a===b?0:a>b?1:-1},numeric:function(a,b){return a-b}},g.addComparator=function(a,b){g.comparators[a]=b},Object.defineProperty?Object.defineProperty(a,"ubersort",{enumerable:!1,writable:!0,value:g}):a.ubersort=g}(Array.prototype);